# Zima Project AI and Robotics Notes

## Project Overview
Zima is a robotic arm project focused on Vision Language Action (VLA) research, utilizing the PI_0 model from Physical Intelligence. The primary goal is to create an intelligent, adaptable robotic system with advanced control and learning capabilities.

## Current Hardware Configuration
### Core Components
- Main Computer: Raspberry Pi 5
- Microcontroller: ESP32 (hardware interface)
- Sensors:
  * Rotary encoders
  * Camera
  * Microphone

## Cloud Infrastructure and Computational Platforms
### Platforms
- AWS Instances:
  * GYDN: 16GB RAM (74 GB storage)
  * G6: 24GB RAM (240 GB storage)
- Vast.ai: H100 GPU compute option
- Local Compute: Raspberry Pi 5

### Current Workflow
1. Fine-tune PI_0 model using Vast.ai H100 GPU
2. Download and validate fine-tuned model
3. Deploy on AWS G6 instance or Raspberry Pi 5
4. Configure edge computing and sensor I/O
5. Integrate with ROS2 framework

## Development Roadmap
1. Precise 3D Positioning
   - Develop robust inverse kinematics
   - Calibrate arm positioning accuracy
   - Implement precise movement control

2. Data Collection Methodology
   - Manual control via PS3 controller
   - Comprehensive sensor data logging
   - Develop flexible data collection framework

3. VLA Model Fine-Tuning
   - Collect task-specific manipulation data
   - Fine-tune PI_0 model
   - Implement basic language commands
     * Example: "Place the yellow cube in the blue bin"

## Development Blockers

### Hardware Challenges
- Routing arm cables and motor paths
- Raspberry Pi 5 connection and power management
- Robust sensor integration
- Camera and display wiring
- Precision mechanical mounting
- ESP32 hardware interface optimization

### Software Challenges
- Develop robust inverse kinematic solver
- Configure ROS2 control system
  * Mapping commands to motor actions
  * Handling rotary encoder feedback
  * IMU data topic management
  * Camera data streaming
- Implement PS3 controller interface
- Design data logging system

## Technical Focus Areas

### Mechanical Design
- Long shoulder hinge design
- Dual motor mounting strategy
- Standardized servo attachment pattern
- Optimized joint connections:
  * Shoulder to elbow
  * Elbow to wrist
  * Wrist to hand
  * Hand to end effector
- Advanced gripper design
- Clearance and range of motion optimization

### Electrical Considerations
- Battery capacity and discharge characteristics
- Precise motor and servo selection
- Comprehensive sensor integration
- Standardized wiring protocols
- Efficient power distribution
- Microcontroller interface design
- Raspberry Pi 5 and ESP32 communication

### Software Research
- Advanced inverse kinematics algorithms
- ROS2 control implementation
- PI_0 model adaptation
- Hierarchical decision-making architecture
  * High-level LLM-driven decision logic
  * Behavior tree for low-level execution
- Innovative memory system design
- Potential online model fine-tuning strategies

## Testing Strategies
### Preferred Testing Approaches
- Hardware-in-the-loop testing
- Simulation environment exploration
  * Potential platforms:
    - MuJoCo
    - Isaac Sim
- Comprehensive sensor validation
- Precision movement testing

## Development Phases
1. Resolve hardware and software integration challenges
2. Develop precise 3D positioning system
3. Implement data collection methodology
4. Fine-tune VLA model
5. Create hierarchical decision-making framework

## Design Constraints
- Arm length: ~1.8m
- Motor and servo performance limitations
- Emphasize precise grip capabilities
- Meet complex object manipulation requirements
- Optimize for Raspberry Pi 5 computational limits

## Technical Considerations
- Define PI_0 model deployment mechanisms
- Optimize computational resource allocation
- Ensure seamless ROS2 framework integration
- Design modular and adaptable system architecture
- Develop robust sensor data processing pipeline

## Recommended Strategy
- Initial model training on Vast.ai infrastructure
- Gradual AWS cloud infrastructure migration
- Continuous performance optimization and validation
- Iterative hardware and software refinement

## Key Research and Development Focus
- Precise robotic manipulation
- Vision Language Action model adaptation
- Edge computing for robotics
- Adaptive learning techniques
- Intelligent sensor data interpretation